CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

IF(WIN32)
    MESSAGE(STATUS "CMAKE_VS_DEVENV_COMMAND: ${CMAKE_VS_DEVENV_COMMAND}")
    MESSAGE(STATUS "CMAKE_VS_INTEL_Fortran_PROJECT_VERSION: ${CMAKE_VS_INTEL_Fortran_PROJECT_VERSION}")
    MESSAGE(STATUS "CMAKE_VS_MSBUILD_COMMAND: ${CMAKE_VS_MSBUILD_COMMAND}")
    MESSAGE(STATUS "CMAKE_VS_NsightTegra_VERSION: ${CMAKE_VS_NsightTegra_VERSION}")
    MESSAGE(STATUS "CMAKE_VS_PLATFORM_NAME: ${CMAKE_VS_PLATFORM_NAME}")
    MESSAGE(STATUS "CMAKE_VS_PLATFORM_TOOLSET: ${CMAKE_VS_PLATFORM_TOOLSET}")
    MESSAGE(STATUS "CMAKE_VS_PLATFORM_TOOLSET_CUDA: ${CMAKE_VS_PLATFORM_TOOLSET_CUDA}")
    MESSAGE(STATUS "CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE: ${CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE}")
    MESSAGE(STATUS "CMAKE_VS_PLATFORM_TOOLSET_VERSION: ${CMAKE_VS_PLATFORM_TOOLSET_VERSION}")
    MESSAGE(STATUS "CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION: ${CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION}")

    MESSAGE(STATUS "CMAKE_CL_64 ${CMAKE_CL_64}")
    MESSAGE(STATUS "WIN32 ${WIN32}")
    MESSAGE(STATUS "WIN64 ${WIN64}")
    MESSAGE(STATUS "CMAKE_SIZEOF_VOID_P ${CMAKE_SIZEOF_VOID_P}")
ENDIF()

INCLUDE(${CMAKE_HOME_DIRECTORY}/cmake/FindVcpkg.cmake)

ADD_SUBDIRECTORY(src)

