// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: room.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "room.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace pt {

namespace {

const ::google::protobuf::Descriptor* room_client_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  room_client_reflection_ = NULL;
const ::google::protobuf::Descriptor* room_client_conf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  room_client_conf_reflection_ = NULL;
const ::google::protobuf::Descriptor* room_server_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  room_server_reflection_ = NULL;
const ::google::protobuf::Descriptor* room_server_conf_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  room_server_conf_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_room_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_room_2eproto() {
  protobuf_AddDesc_room_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "room.proto");
  GOOGLE_CHECK(file != NULL);
  room_client_descriptor_ = file->message_type(0);
  static const int room_client_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_client, roomid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_client, min_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_client, max_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_client, max_round_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_client, ante_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_client, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_client, json_str_),
  };
  room_client_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      room_client_descriptor_,
      room_client::default_instance_,
      room_client_offsets_,
      -1,
      -1,
      -1,
      sizeof(room_client),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_client, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_client, _is_default_instance_));
  room_client_conf_descriptor_ = file->message_type(1);
  static const int room_client_conf_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_client_conf, data_),
  };
  room_client_conf_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      room_client_conf_descriptor_,
      room_client_conf::default_instance_,
      room_client_conf_offsets_,
      -1,
      -1,
      -1,
      sizeof(room_client_conf),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_client_conf, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_client_conf, _is_default_instance_));
  room_server_descriptor_ = file->message_type(2);
  static const int room_server_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_server, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_server, min_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_server, max_gold_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_server, max_round_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_server, ante_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_server, time_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_server, json_str_),
  };
  room_server_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      room_server_descriptor_,
      room_server::default_instance_,
      room_server_offsets_,
      -1,
      -1,
      -1,
      sizeof(room_server),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_server, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_server, _is_default_instance_));
  room_server_conf_descriptor_ = file->message_type(3);
  static const int room_server_conf_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_server_conf, data_),
  };
  room_server_conf_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      room_server_conf_descriptor_,
      room_server_conf::default_instance_,
      room_server_conf_offsets_,
      -1,
      -1,
      -1,
      sizeof(room_server_conf),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_server_conf, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(room_server_conf, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_room_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      room_client_descriptor_, &room_client::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      room_client_conf_descriptor_, &room_client_conf::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      room_server_descriptor_, &room_server::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      room_server_conf_descriptor_, &room_server_conf::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_room_2eproto() {
  delete room_client::default_instance_;
  delete room_client_reflection_;
  delete room_client_conf::default_instance_;
  delete room_client_conf_reflection_;
  delete room_server::default_instance_;
  delete room_server_reflection_;
  delete room_server_conf::default_instance_;
  delete room_server_conf_reflection_;
}

void protobuf_AddDesc_room_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_room_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\nroom.proto\022\002pt\"\202\001\n\013room_client\022\016\n\006room"
    "id\030\001 \001(\005\022\020\n\010min_gold\030\002 \001(\005\022\020\n\010max_gold\030\003"
    " \001(\005\022\021\n\tmax_round\030\004 \001(\005\022\014\n\004ante\030\005 \001(\005\022\014\n"
    "\004time\030\006 \001(\t\022\020\n\010json_str\030\007 \001(\t\"1\n\020room_cl"
    "ient_conf\022\035\n\004data\030\001 \003(\0132\017.pt.room_client"
    "\"\200\001\n\013room_server\022\014\n\004name\030\001 \001(\t\022\020\n\010min_go"
    "ld\030\002 \001(\005\022\020\n\010max_gold\030\003 \001(\005\022\021\n\tmax_round\030"
    "\004 \001(\005\022\014\n\004ante\030\005 \001(\005\022\014\n\004time\030\006 \001(\t\022\020\n\010jso"
    "n_str\030\007 \001(\t\"1\n\020room_server_conf\022\035\n\004data\030"
    "\001 \003(\0132\017.pt.room_serverb\006proto3", 390);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "room.proto", &protobuf_RegisterTypes);
  room_client::default_instance_ = new room_client();
  room_client_conf::default_instance_ = new room_client_conf();
  room_server::default_instance_ = new room_server();
  room_server_conf::default_instance_ = new room_server_conf();
  room_client::default_instance_->InitAsDefaultInstance();
  room_client_conf::default_instance_->InitAsDefaultInstance();
  room_server::default_instance_->InitAsDefaultInstance();
  room_server_conf::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_room_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_room_2eproto {
  StaticDescriptorInitializer_room_2eproto() {
    protobuf_AddDesc_room_2eproto();
  }
} static_descriptor_initializer_room_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int room_client::kRoomidFieldNumber;
const int room_client::kMinGoldFieldNumber;
const int room_client::kMaxGoldFieldNumber;
const int room_client::kMaxRoundFieldNumber;
const int room_client::kAnteFieldNumber;
const int room_client::kTimeFieldNumber;
const int room_client::kJsonStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

room_client::room_client()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pt.room_client)
}

void room_client::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

room_client::room_client(const room_client& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pt.room_client)
}

void room_client::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  roomid_ = 0;
  min_gold_ = 0;
  max_gold_ = 0;
  max_round_ = 0;
  ante_ = 0;
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

room_client::~room_client() {
  // @@protoc_insertion_point(destructor:pt.room_client)
  SharedDtor();
}

void room_client::SharedDtor() {
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void room_client::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* room_client::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return room_client_descriptor_;
}

const room_client& room_client::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();
  return *default_instance_;
}

room_client* room_client::default_instance_ = NULL;

room_client* room_client::New(::google::protobuf::Arena* arena) const {
  room_client* n = new room_client;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void room_client::Clear() {
// @@protoc_insertion_point(message_clear_start:pt.room_client)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(room_client, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<room_client*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(roomid_, max_round_);
  ante_ = 0;
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool room_client::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pt.room_client)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 roomid = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_min_gold;
        break;
      }

      // optional int32 min_gold = 2;
      case 2: {
        if (tag == 16) {
         parse_min_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_gold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_max_gold;
        break;
      }

      // optional int32 max_gold = 3;
      case 3: {
        if (tag == 24) {
         parse_max_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_gold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_max_round;
        break;
      }

      // optional int32 max_round = 4;
      case 4: {
        if (tag == 32) {
         parse_max_round:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_round_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ante;
        break;
      }

      // optional int32 ante = 5;
      case 5: {
        if (tag == 40) {
         parse_ante:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ante_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_time;
        break;
      }

      // optional string time = 6;
      case 6: {
        if (tag == 50) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pt.room_client.time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_json_str;
        break;
      }

      // optional string json_str = 7;
      case 7: {
        if (tag == 58) {
         parse_json_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->json_str().data(), this->json_str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pt.room_client.json_str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pt.room_client)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pt.room_client)
  return false;
#undef DO_
}

void room_client::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pt.room_client)
  // optional int32 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomid(), output);
  }

  // optional int32 min_gold = 2;
  if (this->min_gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->min_gold(), output);
  }

  // optional int32 max_gold = 3;
  if (this->max_gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_gold(), output);
  }

  // optional int32 max_round = 4;
  if (this->max_round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_round(), output);
  }

  // optional int32 ante = 5;
  if (this->ante() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ante(), output);
  }

  // optional string time = 6;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pt.room_client.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->time(), output);
  }

  // optional string json_str = 7;
  if (this->json_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json_str().data(), this->json_str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pt.room_client.json_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->json_str(), output);
  }

  // @@protoc_insertion_point(serialize_end:pt.room_client)
}

::google::protobuf::uint8* room_client::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pt.room_client)
  // optional int32 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomid(), target);
  }

  // optional int32 min_gold = 2;
  if (this->min_gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->min_gold(), target);
  }

  // optional int32 max_gold = 3;
  if (this->max_gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_gold(), target);
  }

  // optional int32 max_round = 4;
  if (this->max_round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_round(), target);
  }

  // optional int32 ante = 5;
  if (this->ante() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ante(), target);
  }

  // optional string time = 6;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pt.room_client.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->time(), target);
  }

  // optional string json_str = 7;
  if (this->json_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json_str().data(), this->json_str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pt.room_client.json_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->json_str(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pt.room_client)
  return target;
}

int room_client::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pt.room_client)
  int total_size = 0;

  // optional int32 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());
  }

  // optional int32 min_gold = 2;
  if (this->min_gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min_gold());
  }

  // optional int32 max_gold = 3;
  if (this->max_gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_gold());
  }

  // optional int32 max_round = 4;
  if (this->max_round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_round());
  }

  // optional int32 ante = 5;
  if (this->ante() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ante());
  }

  // optional string time = 6;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  // optional string json_str = 7;
  if (this->json_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->json_str());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void room_client::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pt.room_client)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const room_client* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const room_client>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pt.room_client)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pt.room_client)
    MergeFrom(*source);
  }
}

void room_client::MergeFrom(const room_client& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pt.room_client)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.min_gold() != 0) {
    set_min_gold(from.min_gold());
  }
  if (from.max_gold() != 0) {
    set_max_gold(from.max_gold());
  }
  if (from.max_round() != 0) {
    set_max_round(from.max_round());
  }
  if (from.ante() != 0) {
    set_ante(from.ante());
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  if (from.json_str().size() > 0) {

    json_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_str_);
  }
}

void room_client::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pt.room_client)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void room_client::CopyFrom(const room_client& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pt.room_client)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool room_client::IsInitialized() const {

  return true;
}

void room_client::Swap(room_client* other) {
  if (other == this) return;
  InternalSwap(other);
}
void room_client::InternalSwap(room_client* other) {
  std::swap(roomid_, other->roomid_);
  std::swap(min_gold_, other->min_gold_);
  std::swap(max_gold_, other->max_gold_);
  std::swap(max_round_, other->max_round_);
  std::swap(ante_, other->ante_);
  time_.Swap(&other->time_);
  json_str_.Swap(&other->json_str_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata room_client::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = room_client_descriptor_;
  metadata.reflection = room_client_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// room_client

// optional int32 roomid = 1;
void room_client::clear_roomid() {
  roomid_ = 0;
}
 ::google::protobuf::int32 room_client::roomid() const {
  // @@protoc_insertion_point(field_get:pt.room_client.roomid)
  return roomid_;
}
 void room_client::set_roomid(::google::protobuf::int32 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:pt.room_client.roomid)
}

// optional int32 min_gold = 2;
void room_client::clear_min_gold() {
  min_gold_ = 0;
}
 ::google::protobuf::int32 room_client::min_gold() const {
  // @@protoc_insertion_point(field_get:pt.room_client.min_gold)
  return min_gold_;
}
 void room_client::set_min_gold(::google::protobuf::int32 value) {
  
  min_gold_ = value;
  // @@protoc_insertion_point(field_set:pt.room_client.min_gold)
}

// optional int32 max_gold = 3;
void room_client::clear_max_gold() {
  max_gold_ = 0;
}
 ::google::protobuf::int32 room_client::max_gold() const {
  // @@protoc_insertion_point(field_get:pt.room_client.max_gold)
  return max_gold_;
}
 void room_client::set_max_gold(::google::protobuf::int32 value) {
  
  max_gold_ = value;
  // @@protoc_insertion_point(field_set:pt.room_client.max_gold)
}

// optional int32 max_round = 4;
void room_client::clear_max_round() {
  max_round_ = 0;
}
 ::google::protobuf::int32 room_client::max_round() const {
  // @@protoc_insertion_point(field_get:pt.room_client.max_round)
  return max_round_;
}
 void room_client::set_max_round(::google::protobuf::int32 value) {
  
  max_round_ = value;
  // @@protoc_insertion_point(field_set:pt.room_client.max_round)
}

// optional int32 ante = 5;
void room_client::clear_ante() {
  ante_ = 0;
}
 ::google::protobuf::int32 room_client::ante() const {
  // @@protoc_insertion_point(field_get:pt.room_client.ante)
  return ante_;
}
 void room_client::set_ante(::google::protobuf::int32 value) {
  
  ante_ = value;
  // @@protoc_insertion_point(field_set:pt.room_client.ante)
}

// optional string time = 6;
void room_client::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& room_client::time() const {
  // @@protoc_insertion_point(field_get:pt.room_client.time)
  return time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void room_client::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pt.room_client.time)
}
 void room_client::set_time(const char* value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pt.room_client.time)
}
 void room_client::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pt.room_client.time)
}
 ::std::string* room_client::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:pt.room_client.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* room_client::release_time() {
  // @@protoc_insertion_point(field_release:pt.room_client.time)
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void room_client::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:pt.room_client.time)
}

// optional string json_str = 7;
void room_client::clear_json_str() {
  json_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& room_client::json_str() const {
  // @@protoc_insertion_point(field_get:pt.room_client.json_str)
  return json_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void room_client::set_json_str(const ::std::string& value) {
  
  json_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pt.room_client.json_str)
}
 void room_client::set_json_str(const char* value) {
  
  json_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pt.room_client.json_str)
}
 void room_client::set_json_str(const char* value, size_t size) {
  
  json_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pt.room_client.json_str)
}
 ::std::string* room_client::mutable_json_str() {
  
  // @@protoc_insertion_point(field_mutable:pt.room_client.json_str)
  return json_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* room_client::release_json_str() {
  // @@protoc_insertion_point(field_release:pt.room_client.json_str)
  
  return json_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void room_client::set_allocated_json_str(::std::string* json_str) {
  if (json_str != NULL) {
    
  } else {
    
  }
  json_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_str);
  // @@protoc_insertion_point(field_set_allocated:pt.room_client.json_str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int room_client_conf::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

room_client_conf::room_client_conf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pt.room_client_conf)
}

void room_client_conf::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

room_client_conf::room_client_conf(const room_client_conf& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pt.room_client_conf)
}

void room_client_conf::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

room_client_conf::~room_client_conf() {
  // @@protoc_insertion_point(destructor:pt.room_client_conf)
  SharedDtor();
}

void room_client_conf::SharedDtor() {
  if (this != default_instance_) {
  }
}

void room_client_conf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* room_client_conf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return room_client_conf_descriptor_;
}

const room_client_conf& room_client_conf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();
  return *default_instance_;
}

room_client_conf* room_client_conf::default_instance_ = NULL;

room_client_conf* room_client_conf::New(::google::protobuf::Arena* arena) const {
  room_client_conf* n = new room_client_conf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void room_client_conf::Clear() {
// @@protoc_insertion_point(message_clear_start:pt.room_client_conf)
  data_.Clear();
}

bool room_client_conf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pt.room_client_conf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pt.room_client data = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pt.room_client_conf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pt.room_client_conf)
  return false;
#undef DO_
}

void room_client_conf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pt.room_client_conf)
  // repeated .pt.room_client data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pt.room_client_conf)
}

::google::protobuf::uint8* room_client_conf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pt.room_client_conf)
  // repeated .pt.room_client data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pt.room_client_conf)
  return target;
}

int room_client_conf::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pt.room_client_conf)
  int total_size = 0;

  // repeated .pt.room_client data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void room_client_conf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pt.room_client_conf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const room_client_conf* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const room_client_conf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pt.room_client_conf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pt.room_client_conf)
    MergeFrom(*source);
  }
}

void room_client_conf::MergeFrom(const room_client_conf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pt.room_client_conf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
}

void room_client_conf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pt.room_client_conf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void room_client_conf::CopyFrom(const room_client_conf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pt.room_client_conf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool room_client_conf::IsInitialized() const {

  return true;
}

void room_client_conf::Swap(room_client_conf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void room_client_conf::InternalSwap(room_client_conf* other) {
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata room_client_conf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = room_client_conf_descriptor_;
  metadata.reflection = room_client_conf_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// room_client_conf

// repeated .pt.room_client data = 1;
int room_client_conf::data_size() const {
  return data_.size();
}
void room_client_conf::clear_data() {
  data_.Clear();
}
const ::pt::room_client& room_client_conf::data(int index) const {
  // @@protoc_insertion_point(field_get:pt.room_client_conf.data)
  return data_.Get(index);
}
::pt::room_client* room_client_conf::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pt.room_client_conf.data)
  return data_.Mutable(index);
}
::pt::room_client* room_client_conf::add_data() {
  // @@protoc_insertion_point(field_add:pt.room_client_conf.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::pt::room_client >*
room_client_conf::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pt.room_client_conf.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::pt::room_client >&
room_client_conf::data() const {
  // @@protoc_insertion_point(field_list:pt.room_client_conf.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int room_server::kNameFieldNumber;
const int room_server::kMinGoldFieldNumber;
const int room_server::kMaxGoldFieldNumber;
const int room_server::kMaxRoundFieldNumber;
const int room_server::kAnteFieldNumber;
const int room_server::kTimeFieldNumber;
const int room_server::kJsonStrFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

room_server::room_server()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pt.room_server)
}

void room_server::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

room_server::room_server(const room_server& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pt.room_server)
}

void room_server::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  min_gold_ = 0;
  max_gold_ = 0;
  max_round_ = 0;
  ante_ = 0;
  time_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

room_server::~room_server() {
  // @@protoc_insertion_point(destructor:pt.room_server)
  SharedDtor();
}

void room_server::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void room_server::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* room_server::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return room_server_descriptor_;
}

const room_server& room_server::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();
  return *default_instance_;
}

room_server* room_server::default_instance_ = NULL;

room_server* room_server::New(::google::protobuf::Arena* arena) const {
  room_server* n = new room_server;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void room_server::Clear() {
// @@protoc_insertion_point(message_clear_start:pt.room_server)
#if defined(__clang__)
#define ZR_HELPER_(f) \
  _Pragma("clang diagnostic push") \
  _Pragma("clang diagnostic ignored \"-Winvalid-offsetof\"") \
  __builtin_offsetof(room_server, f) \
  _Pragma("clang diagnostic pop")
#else
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<room_server*>(16)->f)
#endif

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(min_gold_, ante_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  json_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool room_server::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pt.room_server)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pt.room_server.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_min_gold;
        break;
      }

      // optional int32 min_gold = 2;
      case 2: {
        if (tag == 16) {
         parse_min_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &min_gold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_max_gold;
        break;
      }

      // optional int32 max_gold = 3;
      case 3: {
        if (tag == 24) {
         parse_max_gold:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_gold_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_max_round;
        break;
      }

      // optional int32 max_round = 4;
      case 4: {
        if (tag == 32) {
         parse_max_round:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &max_round_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_ante;
        break;
      }

      // optional int32 ante = 5;
      case 5: {
        if (tag == 40) {
         parse_ante:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &ante_)));

        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_time;
        break;
      }

      // optional string time = 6;
      case 6: {
        if (tag == 50) {
         parse_time:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_time()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->time().data(), this->time().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pt.room_server.time"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_json_str;
        break;
      }

      // optional string json_str = 7;
      case 7: {
        if (tag == 58) {
         parse_json_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->json_str().data(), this->json_str().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "pt.room_server.json_str"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pt.room_server)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pt.room_server)
  return false;
#undef DO_
}

void room_server::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pt.room_server)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pt.room_server.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional int32 min_gold = 2;
  if (this->min_gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->min_gold(), output);
  }

  // optional int32 max_gold = 3;
  if (this->max_gold() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->max_gold(), output);
  }

  // optional int32 max_round = 4;
  if (this->max_round() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->max_round(), output);
  }

  // optional int32 ante = 5;
  if (this->ante() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->ante(), output);
  }

  // optional string time = 6;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pt.room_server.time");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->time(), output);
  }

  // optional string json_str = 7;
  if (this->json_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json_str().data(), this->json_str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pt.room_server.json_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->json_str(), output);
  }

  // @@protoc_insertion_point(serialize_end:pt.room_server)
}

::google::protobuf::uint8* room_server::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pt.room_server)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pt.room_server.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional int32 min_gold = 2;
  if (this->min_gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->min_gold(), target);
  }

  // optional int32 max_gold = 3;
  if (this->max_gold() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->max_gold(), target);
  }

  // optional int32 max_round = 4;
  if (this->max_round() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->max_round(), target);
  }

  // optional int32 ante = 5;
  if (this->ante() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->ante(), target);
  }

  // optional string time = 6;
  if (this->time().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->time().data(), this->time().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pt.room_server.time");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->time(), target);
  }

  // optional string json_str = 7;
  if (this->json_str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json_str().data(), this->json_str().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "pt.room_server.json_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->json_str(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pt.room_server)
  return target;
}

int room_server::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pt.room_server)
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional int32 min_gold = 2;
  if (this->min_gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->min_gold());
  }

  // optional int32 max_gold = 3;
  if (this->max_gold() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_gold());
  }

  // optional int32 max_round = 4;
  if (this->max_round() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->max_round());
  }

  // optional int32 ante = 5;
  if (this->ante() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->ante());
  }

  // optional string time = 6;
  if (this->time().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->time());
  }

  // optional string json_str = 7;
  if (this->json_str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->json_str());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void room_server::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pt.room_server)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const room_server* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const room_server>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pt.room_server)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pt.room_server)
    MergeFrom(*source);
  }
}

void room_server::MergeFrom(const room_server& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pt.room_server)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.min_gold() != 0) {
    set_min_gold(from.min_gold());
  }
  if (from.max_gold() != 0) {
    set_max_gold(from.max_gold());
  }
  if (from.max_round() != 0) {
    set_max_round(from.max_round());
  }
  if (from.ante() != 0) {
    set_ante(from.ante());
  }
  if (from.time().size() > 0) {

    time_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.time_);
  }
  if (from.json_str().size() > 0) {

    json_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_str_);
  }
}

void room_server::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pt.room_server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void room_server::CopyFrom(const room_server& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pt.room_server)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool room_server::IsInitialized() const {

  return true;
}

void room_server::Swap(room_server* other) {
  if (other == this) return;
  InternalSwap(other);
}
void room_server::InternalSwap(room_server* other) {
  name_.Swap(&other->name_);
  std::swap(min_gold_, other->min_gold_);
  std::swap(max_gold_, other->max_gold_);
  std::swap(max_round_, other->max_round_);
  std::swap(ante_, other->ante_);
  time_.Swap(&other->time_);
  json_str_.Swap(&other->json_str_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata room_server::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = room_server_descriptor_;
  metadata.reflection = room_server_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// room_server

// optional string name = 1;
void room_server::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& room_server::name() const {
  // @@protoc_insertion_point(field_get:pt.room_server.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void room_server::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pt.room_server.name)
}
 void room_server::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pt.room_server.name)
}
 void room_server::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pt.room_server.name)
}
 ::std::string* room_server::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:pt.room_server.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* room_server::release_name() {
  // @@protoc_insertion_point(field_release:pt.room_server.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void room_server::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:pt.room_server.name)
}

// optional int32 min_gold = 2;
void room_server::clear_min_gold() {
  min_gold_ = 0;
}
 ::google::protobuf::int32 room_server::min_gold() const {
  // @@protoc_insertion_point(field_get:pt.room_server.min_gold)
  return min_gold_;
}
 void room_server::set_min_gold(::google::protobuf::int32 value) {
  
  min_gold_ = value;
  // @@protoc_insertion_point(field_set:pt.room_server.min_gold)
}

// optional int32 max_gold = 3;
void room_server::clear_max_gold() {
  max_gold_ = 0;
}
 ::google::protobuf::int32 room_server::max_gold() const {
  // @@protoc_insertion_point(field_get:pt.room_server.max_gold)
  return max_gold_;
}
 void room_server::set_max_gold(::google::protobuf::int32 value) {
  
  max_gold_ = value;
  // @@protoc_insertion_point(field_set:pt.room_server.max_gold)
}

// optional int32 max_round = 4;
void room_server::clear_max_round() {
  max_round_ = 0;
}
 ::google::protobuf::int32 room_server::max_round() const {
  // @@protoc_insertion_point(field_get:pt.room_server.max_round)
  return max_round_;
}
 void room_server::set_max_round(::google::protobuf::int32 value) {
  
  max_round_ = value;
  // @@protoc_insertion_point(field_set:pt.room_server.max_round)
}

// optional int32 ante = 5;
void room_server::clear_ante() {
  ante_ = 0;
}
 ::google::protobuf::int32 room_server::ante() const {
  // @@protoc_insertion_point(field_get:pt.room_server.ante)
  return ante_;
}
 void room_server::set_ante(::google::protobuf::int32 value) {
  
  ante_ = value;
  // @@protoc_insertion_point(field_set:pt.room_server.ante)
}

// optional string time = 6;
void room_server::clear_time() {
  time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& room_server::time() const {
  // @@protoc_insertion_point(field_get:pt.room_server.time)
  return time_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void room_server::set_time(const ::std::string& value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pt.room_server.time)
}
 void room_server::set_time(const char* value) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pt.room_server.time)
}
 void room_server::set_time(const char* value, size_t size) {
  
  time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pt.room_server.time)
}
 ::std::string* room_server::mutable_time() {
  
  // @@protoc_insertion_point(field_mutable:pt.room_server.time)
  return time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* room_server::release_time() {
  // @@protoc_insertion_point(field_release:pt.room_server.time)
  
  return time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void room_server::set_allocated_time(::std::string* time) {
  if (time != NULL) {
    
  } else {
    
  }
  time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time);
  // @@protoc_insertion_point(field_set_allocated:pt.room_server.time)
}

// optional string json_str = 7;
void room_server::clear_json_str() {
  json_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& room_server::json_str() const {
  // @@protoc_insertion_point(field_get:pt.room_server.json_str)
  return json_str_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void room_server::set_json_str(const ::std::string& value) {
  
  json_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:pt.room_server.json_str)
}
 void room_server::set_json_str(const char* value) {
  
  json_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:pt.room_server.json_str)
}
 void room_server::set_json_str(const char* value, size_t size) {
  
  json_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:pt.room_server.json_str)
}
 ::std::string* room_server::mutable_json_str() {
  
  // @@protoc_insertion_point(field_mutable:pt.room_server.json_str)
  return json_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* room_server::release_json_str() {
  // @@protoc_insertion_point(field_release:pt.room_server.json_str)
  
  return json_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void room_server::set_allocated_json_str(::std::string* json_str) {
  if (json_str != NULL) {
    
  } else {
    
  }
  json_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), json_str);
  // @@protoc_insertion_point(field_set_allocated:pt.room_server.json_str)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int room_server_conf::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

room_server_conf::room_server_conf()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:pt.room_server_conf)
}

void room_server_conf::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

room_server_conf::room_server_conf(const room_server_conf& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:pt.room_server_conf)
}

void room_server_conf::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
}

room_server_conf::~room_server_conf() {
  // @@protoc_insertion_point(destructor:pt.room_server_conf)
  SharedDtor();
}

void room_server_conf::SharedDtor() {
  if (this != default_instance_) {
  }
}

void room_server_conf::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* room_server_conf::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return room_server_conf_descriptor_;
}

const room_server_conf& room_server_conf::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_room_2eproto();
  return *default_instance_;
}

room_server_conf* room_server_conf::default_instance_ = NULL;

room_server_conf* room_server_conf::New(::google::protobuf::Arena* arena) const {
  room_server_conf* n = new room_server_conf;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void room_server_conf::Clear() {
// @@protoc_insertion_point(message_clear_start:pt.room_server_conf)
  data_.Clear();
}

bool room_server_conf::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:pt.room_server_conf)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .pt.room_server data = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_data:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_data;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:pt.room_server_conf)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:pt.room_server_conf)
  return false;
#undef DO_
}

void room_server_conf::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:pt.room_server_conf)
  // repeated .pt.room_server data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:pt.room_server_conf)
}

::google::protobuf::uint8* room_server_conf::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:pt.room_server_conf)
  // repeated .pt.room_server data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->data(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:pt.room_server_conf)
  return target;
}

int room_server_conf::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:pt.room_server_conf)
  int total_size = 0;

  // repeated .pt.room_server data = 1;
  total_size += 1 * this->data_size();
  for (int i = 0; i < this->data_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->data(i));
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void room_server_conf::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:pt.room_server_conf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const room_server_conf* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const room_server_conf>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:pt.room_server_conf)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:pt.room_server_conf)
    MergeFrom(*source);
  }
}

void room_server_conf::MergeFrom(const room_server_conf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:pt.room_server_conf)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  data_.MergeFrom(from.data_);
}

void room_server_conf::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:pt.room_server_conf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void room_server_conf::CopyFrom(const room_server_conf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:pt.room_server_conf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool room_server_conf::IsInitialized() const {

  return true;
}

void room_server_conf::Swap(room_server_conf* other) {
  if (other == this) return;
  InternalSwap(other);
}
void room_server_conf::InternalSwap(room_server_conf* other) {
  data_.UnsafeArenaSwap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata room_server_conf::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = room_server_conf_descriptor_;
  metadata.reflection = room_server_conf_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// room_server_conf

// repeated .pt.room_server data = 1;
int room_server_conf::data_size() const {
  return data_.size();
}
void room_server_conf::clear_data() {
  data_.Clear();
}
const ::pt::room_server& room_server_conf::data(int index) const {
  // @@protoc_insertion_point(field_get:pt.room_server_conf.data)
  return data_.Get(index);
}
::pt::room_server* room_server_conf::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:pt.room_server_conf.data)
  return data_.Mutable(index);
}
::pt::room_server* room_server_conf::add_data() {
  // @@protoc_insertion_point(field_add:pt.room_server_conf.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::pt::room_server >*
room_server_conf::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:pt.room_server_conf.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::pt::room_server >&
room_server_conf::data() const {
  // @@protoc_insertion_point(field_list:pt.room_server_conf.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace pt

// @@protoc_insertion_point(global_scope)
