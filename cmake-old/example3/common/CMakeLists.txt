CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS On)

PROJECT(CMAKE_COMMON)
SET(OUTPUT common)

SET(OUTPUT_DIR ${CMAKE_BINARY_DIR}/output)

## 判断g++ vc++ 版本号，是否支持C++17
SET(MSVC_VERSION_MIN "1915")
#set(CMAKE_CXX_FLAGS "-std=c++17 ${CMAKE_CXX_FLAGS}")
IF(MSVC)
    IF(MSVC_VERSION STREQUAL ${MSVC_VERSION_MIN})
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /std:c++17")
        #ADD_DEFINITIONS("/std:c++17")
        MESSAGE(STATUS "set CMAKE_CXX_FLAGS /std:c++17")
    ELSE()
        MESSAGE(FATAL_ERROR "MSVC_VERSION: ${MSVC_VERSION} not support std=c++17."
                "use Visual Studio 2017")
    ENDIF()
ENDIF()

#MESSAGE(WARNING "CMAKE_CURRENT_SOURCE_DIR: ${CMAKE_CURRENT_SOURCE_DIR}")
#MESSAGE(WARNING "CMAKE_HOME_DIRECTORY: ${CMAKE_HOME_DIRECTORY}")
#MESSAGE(WARNING "CMAKE_ROOT: ${CMAKE_ROOT}")

INCLUDE_DIRECTORIES(${CMAKE_HOME_DIRECTORY})

FILE(GLOB SRC	*.cpp *.h)
SOURCE_GROUP("" FILES ${SRC})

SET(SRC_ALL ${SRC})

IF(WIN32)
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}/debug/lib)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}/debug/lib)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}/debug/bin)

    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}/release/lib)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}/release/bin)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}/release/lib)
ELSEIF(UNIX)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_DIR}/lib)
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_DIR}/lib)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIR}/bin)
ENDIF(WIN32)

#ADD_COMPILE_DEFINITIONS(DllExport="__declspec(dllexport)")
ADD_LIBRARY(${OUTPUT} SHARED ${SRC_ALL})
#ADD_LIBRARY(${OUTPUT} ${SRC_ALL})
