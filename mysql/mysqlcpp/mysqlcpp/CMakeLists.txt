CMAKE_MINIMUM_REQUIRED(VERSION 3.0)
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS On)

PROJECT(MYSQLCPP)
SET(OUTPUT mysqlcpp)
SET(OUTPUT_DIR ${CMAKE_BINARY_DIR}/output)
OPTION(MYSQLCPP_SHARD "output type is shared" ON)

IF(WIN32)
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}/debug/lib)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}/debug/lib)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}/debug/bin)

    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}/release/lib)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}/release/bin)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}/release/lib)
ELSEIF(UNIX)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_DIR}/lib)
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_DIR}/lib)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIR}/bin)
ENDIF(WIN32)


### 项目结构
FILE(GLOB MYSQLCPP	*.cpp *.h)
SOURCE_GROUP("" FILES ${MYSQLCPP})
FILE(GLOB MYSQLCPP_DETAIL detail/*.cpp detail/*.h)
SOURCE_GROUP(TREE ${PROJECT_SOURCE_DIR} FILES ${MYSQLCPP_DETAIL})
SET(SRC_LIST ${MYSQLCPP} ${MYSQLCPP_DETAIL})


find_package(Boost COMPONENTS date_time REQUIRED)
include_directories(${Boost_INCLUDE_DIRS})

### 头文件
#INCLUDE_DIRECTORIES(${CMAKE_HOME_DIRECTORY})


### 默认生成动态库
IF(MYSQLCPP_SHARD)
    #### third libraries
    #SET(THIRD_LIBRARIES 
    #    ${BOOST_LIBRARIES}
    #    ${MYSQL_LIBRARIES}
    #    )

    IF(WIN32)
        ADD_DEFINITIONS(/std:c++17)
        ADD_DEFINITIONS("/utf-8")
        #ADD_DEFINITIONS(/wd4251)
        #ADD_DEFINITIONS("/D _WIN32_WINNT=0x0601")
        #ADD_DEFINITIONS("/D ZYLIB_EXPORT=__declspec(dllexport)")
        
        ADD_DEFINITIONS("/D MYSQLCPP_EXPORT=__declspec(dllexport)")
    ELSEIF(UNIX)
        #ADD_DEFINITIONS(-g -Wall -Wextra -Werror -std=c++17)
        ADD_DEFINITIONS(-DBOOST_LOG_DYN_LINK)
        #SET(THIRD_LIBRARIES ${THIRD_LIBRARIES} pthread)
    ENDIF()
    
    ADD_LIBRARY(${OUTPUT} SHARED ${SRC_LIST})
    
    TARGET_LINK_LIBRARIES(${OUTPUT} PRIVATE ${Boost_LIBRARIES} ${LIBMYSQL_LIBRARIES})
ELSE()
    IF(WIN32)
        ADD_DEFINITIONS(/std:c++17)
        ADD_DEFINITIONS("/D _WIN32_WINNT=0x0601")
        ADD_DEFINITIONS("/D MYSQLCPP_EZPORT")
    ELSEIF(UNIX)
        
    ENDIF()

    ADD_LIBRARY(${OUTPUT} ${SRC_LIST})
ENDIF()
