CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS On)

PROJECT(ZYLIB)
SET(OUTPUT zylib)
SET(OUTPUT_DIR ${CMAKE_BINARY_DIR}/output)
OPTION(ZYLIB_SHARD "output type is shared" ON)

FILE(GLOB ZYLIB	*.cpp *.h)
SOURCE_GROUP("" FILES ${ZYLIB})

SET(SRC_LIST ${ZYLIB})

MESSAGE("BOOST_INCLUDE_DIR: ${BOOST_INCLUDE_DIR}")
MESSAGE("BOOST_LIBRARY_DIR: ${BOOST_LIBRARY_DIR}")

IF(WIN32)
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}/debug/lib)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}/debug/lib)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_DEBUG ${OUTPUT_DIR}/debug/bin)

    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}/release/lib)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}/release/bin)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_RELEASE ${OUTPUT_DIR}/release/lib)
ELSEIF(UNIX)
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_DIR}/lib)
    SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_DIR}/lib)
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_DIR}/bin)
ENDIF(WIN32)


INCLUDE(${CMAKE_HOME_DIRECTORY}/cmake/FindBoost.cmake)
INCLUDE_DIRECTORIES(${BOOST_INCLUDE_DIR})
INCLUDE_DIRECTORIES(${CMAKE_HOME_DIRECTORY}/)

### 默认生成动态库
IF(ZYLIB_SHARD)
    #### third libraries
    SET(THIRD_LIBRARIES 
        ${BOOST_LIBRARIES}
        )

    IF(WIN32)
        ADD_DEFINITIONS("/D _WIN32_WINNT=0x0601")
        #ADD_DEFINITIONS(/std:c++17)
    ELSEIF(UNIX)
        #ADD_DEFINITIONS(-g -Wall -Wextra -Werror -std=c++17)
        ADD_DEFINITIONS(-DBOOST_LOG_DYN_LINK)
        #SET(THIRD_LIBRARIES ${THIRD_LIBRARIES})
    ENDIF()

    MESSAGE("THIRD_LIBRARIES: ${THIRD_LIBRARIES}")
    
    ADD_LIBRARY(${OUTPUT} SHARED ${SRC_LIST})
    
    TARGET_LINK_LIBRARIES(${OUTPUT} ${THIRD_LIBRARIES})
ELSE()
    ADD_LIBRARY(${OUTPUT} ${SRC_LIST})
ENDIF()
